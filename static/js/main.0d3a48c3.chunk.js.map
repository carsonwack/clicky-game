{"version":3,"sources":["../public/img sync /^/.//.*/.png$","../public/img/bezos.png","../public/img/francis.png","../public/img/gates.png","../public/img/jinping.png","../public/img/macron.png","../public/img/merkel.png","../public/img/modi.png","../public/img/page.png","../public/img/powell.png","../public/img/putin.png","../public/img/salman.png","../public/img/trump.png","App.js","serviceWorker.js","index.js"],"names":["map","./bezos.png","./francis.png","./gates.png","./jinping.png","./macron.png","./merkel.png","./modi.png","./page.png","./powell.png","./putin.png","./salman.png","./trump.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","collection","shuffle","console","log","Game","state","score","topScore","message","clicked","imgList","handleClick","name","_this$state","_this","includes","setState","concat","_this2","this","react_default","a","createElement","className","href","col-md-8","offset-2","key","src","require","alt","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0d3a48c3.chunk.js","sourcesContent":["var map = {\n\t\"./bezos.png\": 18,\n\t\"./francis.png\": 19,\n\t\"./gates.png\": 20,\n\t\"./jinping.png\": 21,\n\t\"./macron.png\": 22,\n\t\"./merkel.png\": 23,\n\t\"./modi.png\": 24,\n\t\"./page.png\": 25,\n\t\"./powell.png\": 26,\n\t\"./putin.png\": 27,\n\t\"./salman.png\": 28,\n\t\"./trump.png\": 29\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 17;","module.exports = __webpack_public_path__ + \"static/media/bezos.962b804d.png\";","module.exports = __webpack_public_path__ + \"static/media/francis.8710a3a8.png\";","module.exports = __webpack_public_path__ + \"static/media/gates.0e4d0ca8.png\";","module.exports = __webpack_public_path__ + \"static/media/jinping.50830478.png\";","module.exports = __webpack_public_path__ + \"static/media/macron.514f51fc.png\";","module.exports = __webpack_public_path__ + \"static/media/merkel.16b395a3.png\";","module.exports = __webpack_public_path__ + \"static/media/modi.cb3b37a8.png\";","module.exports = __webpack_public_path__ + \"static/media/page.01257703.png\";","module.exports = __webpack_public_path__ + \"static/media/powell.d746e88e.png\";","module.exports = __webpack_public_path__ + \"static/media/putin.2f58c16a.png\";","module.exports = __webpack_public_path__ + \"static/media/salman.123064f2.png\";","module.exports = __webpack_public_path__ + \"static/media/trump.8be4df03.png\";","import React, { Component } from 'react';\nimport './App.css';\nimport shuffle from \"shuffle-array\";\n\nlet collection = [1,2,3,4,5];\nshuffle(collection);\nconsole.log(collection);\n\n\n\n\nclass Game extends Component {\n\n  state = {\n    score: 0,\n    topScore: 0,\n    message: \"Click an image to Begin!\",\n    clicked: [],\n    imgList:  ['jinping', 'putin', 'trump', 'merkel', 'bezos', 'francis', 'gates', 'salman', 'modi', 'page', 'powell', 'macron']\n  }\n\n\n\n  handleClick = (name) => {\n    let { score, topScore, message, clicked, imgList } = this.state;\n    if (clicked.includes(name)) {\n      this.setState({\n        score: 0,\n        message: \"Oops that was already clicked ðŸ˜£. Try again!\",\n        clicked: [],\n        imgList: shuffle(imgList)\n      })\n    } else {\n      score += 1;\n      if (score > topScore) {\n        topScore = score\n      }\n      message = \"Nice!\";\n      clicked = clicked.concat([name]);\n      if (score === 12) {\n        score = 0;\n        message = \"You got em all ðŸŽ‰ðŸŽ‰ðŸŽ‰\";\n        clicked = []\n      }\n      this.setState({\n        score: score,\n        topScore: topScore,\n        message: message,\n        clicked: clicked.concat([name]),\n        imgList: shuffle(imgList)\n      })\n    }\n  };\n\n\n  render() {\n    return (\n      <div className=\"wrap\">\n        <div>\n          <nav className=\"navbar\">\n            <ul>\n              <li className=\"brand\">\n                <a href=\"/\">Clicky Game</a>\n              </li>\n              <li>\n                {this.state.message}\n              </li>\n              <li>\n                Score: {this.state.score} &nbsp; | &nbsp; Top Score: {this.state.topScore}\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"container\">\n          <div col-md-8=\"true\" offset-2=\"true\">\n            {\n              this.state.imgList.map(name =>\n                <img\n                  key={name}\n                  src={require(`./../public/img/${name}.png`)}\n                  alt={name}\n                  className=\"namedImgs\"\n                  onClick={() => this.handleClick(name)}\n                />)\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}